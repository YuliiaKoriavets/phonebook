{"version":3,"file":"static/js/411.f46168be.chunk.js","mappings":"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","sources":["redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","webpack://phonebook/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\nimport { useSelector } from 'react-redux';\nimport { Box, TextField, Button } from '@mui/material';\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newContact = { name, number };\n    const findName = contacts.find(\n      contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n    );\n\n    if (findName) {\n      alert(` ${findName.name} is already in contacts.`);\n    } else {\n      dispatch(addContact(newContact));\n    }\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      noValidate\n      onSubmit={handleSubmit}\n      sx={{ mt: 1 }}\n      border={1}\n      maxWidth={480}\n      ml=\"auto\"\n      mr=\"auto\"\n      mb={5}\n      borderRadius={2}\n      padding={5}\n    >\n      <TextField\n        margin=\"normal\"\n        required\n        fullWidth\n        label=\"Contact Name\"\n        autoComplete=\"email\"\n        onChange={handleChange}\n        autoFocus\n        id={nameInputId}\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n      />\n      <TextField\n        margin=\"normal\"\n        required\n        fullWidth\n        name=\"number\"\n        label=\"Phone Number\"\n        autoComplete=\"current-password\"\n        id={numberInputId}\n        type=\"tel\"\n        value={number}\n        onChange={handleChange}\n        pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{2}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses\"\n      />\n      <Button type=\"submit\" fullWidth variant=\"contained\" sx={{ mt: 3, mb: 2 }}>\n        Add contact\n      </Button>\n    </Box>\n  );\n}\n","import { nanoid } from 'nanoid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/contactsSelectors';\nimport { changeFilter } from 'redux/contacts/contactsSlice';\nimport { TextField, Box } from '@mui/material';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleChangeFilter = event => {\n    dispatch(changeFilter(event.currentTarget.value));\n  };\n\n  let filterInputId = nanoid();\n  return (\n    <Box maxWidth={400} ml=\"auto\" mr=\"auto\">\n      <TextField\n        margin=\"normal\"\n        fullWidth\n        id={filterInputId}\n        type=\"text\"\n        value={filter}\n        onChange={handleChangeFilter}\n        label=\"Please enter contact name\"\n        variant=\"standard\"\n      />\n    </Box>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Loader_wrapper__2YrQT\"};","import { FallingLines } from 'react-loader-spinner';\nimport css from '../Loader/Loader.module.css';\n\nexport default function Loader() {\n  return (\n    <div className={css.wrapper}>\n      <FallingLines\n        color=\"#1976d2\"\n        width=\"100\"\n        visible={true}\n        ariaLabel=\"falling-lines-loading\"\n      />\n    </div>\n  );\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/contacts/contactsSelectors';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\nimport {\n  Box,\n  Button,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n} from '@mui/material';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectFilteredContacts);\n\n  return (\n    <Box mt={5} mb={10}>\n      <List\n        dense\n        sx={{\n          width: '100%',\n          maxWidth: 480,\n          bgcolor: 'background.paper',\n          marginLeft: 'auto',\n          marginRight: 'auto',\n        }}\n      >\n        {contacts.map(({ id, name, number }) => (\n          <ListItem key={id} disablePadding>\n            <ListItemAvatar>\n              <AccountCircleIcon color=\"primary\" />\n            </ListItemAvatar>\n            <ListItemText>\n              {name}: {number}\n            </ListItemText>\n            <Button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n              Delete\n            </Button>\n          </ListItem>\n        ))}\n      </List>\n    </Box>\n  );\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { selectIsLoading } from 'redux/contacts/contactsSelectors';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport Loader from 'components/Loader/Loader';\nimport ContactList from 'components/ContactList/ContactList';\nimport { Container, Typography } from '@mui/material';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Typography component=\"h1\" variant=\"h4\" align=\"center\" mt={10}>\n        Phonebook\n      </Typography>\n      <ContactForm />\n      <Filter />\n      {isLoading && <Loader />}\n      <ContactList />\n    </Container>\n  );\n}\n"],"names":["selectContacts","state","contacts","selectFilter","filter","selectIsLoading","isLoading","selectFilteredContacts","createSelector","normalizedFilter","toLowerCase","name","includes","ContactForm","dispatch","useDispatch","useSelector","useState","setName","number","setNumber","nameInputId","nanoid","numberInputId","handleChange","event","target","value","reset","Box","component","noValidate","onSubmit","preventDefault","newContact","findName","find","contact","alert","addContact","sx","mt","border","maxWidth","ml","mr","mb","borderRadius","padding","TextField","margin","required","fullWidth","label","autoComplete","onChange","autoFocus","id","type","pattern","title","Button","variant","Filter","filterInputId","changeFilter","currentTarget","Loader","className","css","color","width","visible","ariaLabel","ContactList","List","dense","bgcolor","marginLeft","marginRight","map","ListItem","disablePadding","ListItemAvatar","AccountCircle","ListItemText","onClick","deleteContact","Contacts","useEffect","fetchContacts","Container","Typography","align"],"sourceRoot":""}